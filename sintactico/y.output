Terminales no usados en la gramática

   REL


Estado 31 conflictos: 1 desplazamiento/reducción
Estado 47 conflictos: 1 desplazamiento/reducción
Estado 66 conflictos: 1 desplazamiento/reducción
Estado 67 conflictos: 1 desplazamiento/reducción
Estado 70 conflictos: 1 desplazamiento/reducción
Estado 73 conflictos: 1 desplazamiento/reducción
Estado 74 conflictos: 1 desplazamiento/reducción, 7 reducción/reducción
Estado 79 conflictos: 1 desplazamiento/reducción
Estado 95 conflictos: 11 desplazamiento/reducción, 7 reducción/reducción
Estado 102 conflictos: 1 desplazamiento/reducción
Estado 108 conflictos: 1 desplazamiento/reducción
Estado 110 conflictos: 1 desplazamiento/reducción
Estado 113 conflictos: 1 desplazamiento/reducción
Estado 114 conflictos: 11 desplazamiento/reducción, 7 reducción/reducción
Estado 127 conflictos: 1 desplazamiento/reducción
Estado 128 conflictos: 1 desplazamiento/reducción
Estado 130 conflictos: 11 desplazamiento/reducción, 7 reducción/reducción


Gramática

    0 $accept: programa $end

    1 programa: cabecera_programa bloque

    2 cabecera_programa: MAIN

    3 bloque: INIBLOQUE declar_de_variables_locales declar_de_subprogs sentencias FINBLOQUE

    4 declar_de_variables_locales: marca_ini_declar_variables variables_locales marca_fin_declar_variables
    5                            | %empty

    6 marca_ini_declar_variables: LOCAL INIBLOQUE

    7 variables_locales: variables_locales cuerpo_declar_variables
    8                  | cuerpo_declar_variables

    9 cuerpo_declar_variables: tipo_variable lista_variables PYC

   10 marca_fin_declar_variables: FINBLOQUE

   11 declar_de_subprogs: declar_de_subprogs declar_subprog
   12                   | %empty

   13 declar_subprog: cabecera_subprog bloque

   14 cabecera_subprog: tipo_variable ID PARIZQ parametros PARDER

   15 tipo_variable: TIPOSIMPLE
   16              | tipo_variable_complejo

   17 tipo_variable_complejo: LISTA TIPOSIMPLE

   18 lista_variables: ID COMA lista_variables
   19                | ID

   20 parametros: parametro COMA parametros
   21           | parametro

   22 parametro: tipo_variable ID

   23 sentencias: sentencias sentencia
   24           | %empty

   25 sentencia: bloque
   26          | expresion PYC
   27          | sentencia_asignacion
   28          | sentencia_lista
   29          | sentencia_if
   30          | sentencia_while
   31          | sentencia_entrada
   32          | sentencia_salida
   33          | sentencia_do_until
   34          | sentencia_return

   35 expresion: op_unario expresion
   36          | expresion op_binario expresion
   37          | expresion MASMAS expresion AT expresion
   38          | ID
   39          | constante
   40          | llamada_funcion
   41          | PARIZQ expresion PARDER

   42 op_unario: ADDSUB
   43          | EXCL
   44          | INTHASH

   45 op_binario: ORLOG
   46           | ANDLOG
   47           | OR
   48           | XOR
   49           | AND
   50           | EQN
   51           | ADDSUB
   52           | MULDIV
   53           | PORPOR
   54           | BORRLIST
   55           | %empty

   56 constante: CONST
   57          | lista

   58 lista: CORIZQ lista_expresiones CORDER
   59      | CORIZQ CORDER

   60 llamada_funcion: ID PARIZQ lista_expresiones PARDER
   61                | ID PARIZQ PARDER

   62 lista_expresiones: expresion COMA lista_expresiones
   63                  | expresion

   64 sentencia_asignacion: ID op_asignacion expresion PYC

   65 op_asignacion: ASIGN

   66 sentencia_lista: expresion SHIFT
   67                | DOLLAR expresion

   68 sentencia_if: IF PARIZQ expresion PARDER sentencia bloque_else

   69 bloque_else: ELSE sentencia
   70            | %empty

   71 sentencia_while: WHILE PARIZQ expresion PARDER sentencia

   72 sentencia_entrada: CIN lista_variables PYC

   73 sentencia_salida: COUT lista_expresiones_o_cadena PYC

   74 lista_expresiones_o_cadena: expresion_cadena COMA lista_expresiones_o_cadena
   75                           | expresion_cadena

   76 expresion_cadena: expresion
   77                 | CADENA

   78 sentencia_do_until: DO sentencia UNTIL PARIZQ expresion PARDER PYC

   79 sentencia_return: RETURN expresion PYC


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
INIBLOQUE (258) 3 6
FINBLOQUE (259) 3 10
LOCAL (260) 6
TIPOSIMPLE (261) 15 17
ID (262) 14 18 19 22 38 60 61 64
PARIZQ (263) 14 41 60 61 68 71 78
PARDER (264) 14 41 60 61 68 71 78
PYC (265) 9 26 64 72 73 78 79
CIN (266) 72
COUT (267) 73
CADENA (268) 77
RETURN (269) 79
ORLOG (270) 45
ANDLOG (271) 46
OR (272) 47
XOR (273) 48
AND (274) 49
EQN (275) 50
REL (276)
ADDSUB (277) 42 51
MULDIV (278) 52
EXCL (279) 43
PORPOR (280) 53
BORRLIST (281) 54
INTHASH (282) 44
AT (283) 37
MASMAS (284) 37
CONST (285) 56
DOLLAR (286) 67
SHIFT (287) 66
ASIGN (288) 65
COMA (289) 18 20 62 74
MAIN (290) 2
IF (291) 68
ELSE (292) 69
DO (293) 78
UNTIL (294) 78
WHILE (295) 71
LISTA (296) 17
CORIZQ (297) 58 59
CORDER (298) 58 59


No terminales con las reglas donde aparecen

$accept (44)
    en la izquierda: 0
programa (45)
    en la izquierda: 1, en la derecha: 0
cabecera_programa (46)
    en la izquierda: 2, en la derecha: 1
bloque (47)
    en la izquierda: 3, en la derecha: 1 13 25
declar_de_variables_locales (48)
    en la izquierda: 4 5, en la derecha: 3
marca_ini_declar_variables (49)
    en la izquierda: 6, en la derecha: 4
variables_locales (50)
    en la izquierda: 7 8, en la derecha: 4 7
cuerpo_declar_variables (51)
    en la izquierda: 9, en la derecha: 7 8
marca_fin_declar_variables (52)
    en la izquierda: 10, en la derecha: 4
declar_de_subprogs (53)
    en la izquierda: 11 12, en la derecha: 3 11
declar_subprog (54)
    en la izquierda: 13, en la derecha: 11
cabecera_subprog (55)
    en la izquierda: 14, en la derecha: 13
tipo_variable (56)
    en la izquierda: 15 16, en la derecha: 9 14 22
tipo_variable_complejo (57)
    en la izquierda: 17, en la derecha: 16
lista_variables (58)
    en la izquierda: 18 19, en la derecha: 9 18 72
parametros (59)
    en la izquierda: 20 21, en la derecha: 14 20
parametro (60)
    en la izquierda: 22, en la derecha: 20 21
sentencias (61)
    en la izquierda: 23 24, en la derecha: 3 23
sentencia (62)
    en la izquierda: 25 26 27 28 29 30 31 32 33 34, en la derecha:
    23 68 69 71 78
expresion (63)
    en la izquierda: 35 36 37 38 39 40 41, en la derecha: 26 35 36
    37 41 62 63 64 66 67 68 71 76 78 79
op_unario (64)
    en la izquierda: 42 43 44, en la derecha: 35
op_binario (65)
    en la izquierda: 45 46 47 48 49 50 51 52 53 54 55, en la derecha:
    36
constante (66)
    en la izquierda: 56 57, en la derecha: 39
lista (67)
    en la izquierda: 58 59, en la derecha: 57
llamada_funcion (68)
    en la izquierda: 60 61, en la derecha: 40
lista_expresiones (69)
    en la izquierda: 62 63, en la derecha: 58 60 62
sentencia_asignacion (70)
    en la izquierda: 64, en la derecha: 27
op_asignacion (71)
    en la izquierda: 65, en la derecha: 64
sentencia_lista (72)
    en la izquierda: 66 67, en la derecha: 28
sentencia_if (73)
    en la izquierda: 68, en la derecha: 29
bloque_else (74)
    en la izquierda: 69 70, en la derecha: 68
sentencia_while (75)
    en la izquierda: 71, en la derecha: 30
sentencia_entrada (76)
    en la izquierda: 72, en la derecha: 31
sentencia_salida (77)
    en la izquierda: 73, en la derecha: 32
lista_expresiones_o_cadena (78)
    en la izquierda: 74 75, en la derecha: 73 74
expresion_cadena (79)
    en la izquierda: 76 77, en la derecha: 74 75
sentencia_do_until (80)
    en la izquierda: 78, en la derecha: 33
sentencia_return (81)
    en la izquierda: 79, en la derecha: 34


Estado 0

    0 $accept: . programa $end

    MAIN  desplazar e ir al estado 1

    programa           ir al estado 2
    cabecera_programa  ir al estado 3


Estado 1

    2 cabecera_programa: MAIN .

    $default  reduce usando la regla 2 (cabecera_programa)


Estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 4


Estado 3

    1 programa: cabecera_programa . bloque

    INIBLOQUE  desplazar e ir al estado 5

    bloque  ir al estado 6


Estado 4

    0 $accept: programa $end .

    $default  aceptar


Estado 5

    3 bloque: INIBLOQUE . declar_de_variables_locales declar_de_subprogs sentencias FINBLOQUE

    LOCAL  desplazar e ir al estado 7

    $default  reduce usando la regla 5 (declar_de_variables_locales)

    declar_de_variables_locales  ir al estado 8
    marca_ini_declar_variables   ir al estado 9


Estado 6

    1 programa: cabecera_programa bloque .

    $default  reduce usando la regla 1 (programa)


Estado 7

    6 marca_ini_declar_variables: LOCAL . INIBLOQUE

    INIBLOQUE  desplazar e ir al estado 10


Estado 8

    3 bloque: INIBLOQUE declar_de_variables_locales . declar_de_subprogs sentencias FINBLOQUE

    $default  reduce usando la regla 12 (declar_de_subprogs)

    declar_de_subprogs  ir al estado 11


Estado 9

    4 declar_de_variables_locales: marca_ini_declar_variables . variables_locales marca_fin_declar_variables

    TIPOSIMPLE  desplazar e ir al estado 12
    LISTA       desplazar e ir al estado 13

    variables_locales        ir al estado 14
    cuerpo_declar_variables  ir al estado 15
    tipo_variable            ir al estado 16
    tipo_variable_complejo   ir al estado 17


Estado 10

    6 marca_ini_declar_variables: LOCAL INIBLOQUE .

    $default  reduce usando la regla 6 (marca_ini_declar_variables)


Estado 11

    3 bloque: INIBLOQUE declar_de_variables_locales declar_de_subprogs . sentencias FINBLOQUE
   11 declar_de_subprogs: declar_de_subprogs . declar_subprog

    TIPOSIMPLE  desplazar e ir al estado 12
    LISTA       desplazar e ir al estado 13

    $default  reduce usando la regla 24 (sentencias)

    declar_subprog          ir al estado 18
    cabecera_subprog        ir al estado 19
    tipo_variable           ir al estado 20
    tipo_variable_complejo  ir al estado 17
    sentencias              ir al estado 21


Estado 12

   15 tipo_variable: TIPOSIMPLE .

    $default  reduce usando la regla 15 (tipo_variable)


Estado 13

   17 tipo_variable_complejo: LISTA . TIPOSIMPLE

    TIPOSIMPLE  desplazar e ir al estado 22


Estado 14

    4 declar_de_variables_locales: marca_ini_declar_variables variables_locales . marca_fin_declar_variables
    7 variables_locales: variables_locales . cuerpo_declar_variables

    FINBLOQUE   desplazar e ir al estado 23
    TIPOSIMPLE  desplazar e ir al estado 12
    LISTA       desplazar e ir al estado 13

    cuerpo_declar_variables     ir al estado 24
    marca_fin_declar_variables  ir al estado 25
    tipo_variable               ir al estado 16
    tipo_variable_complejo      ir al estado 17


Estado 15

    8 variables_locales: cuerpo_declar_variables .

    $default  reduce usando la regla 8 (variables_locales)


Estado 16

    9 cuerpo_declar_variables: tipo_variable . lista_variables PYC

    ID  desplazar e ir al estado 26

    lista_variables  ir al estado 27


Estado 17

   16 tipo_variable: tipo_variable_complejo .

    $default  reduce usando la regla 16 (tipo_variable)


Estado 18

   11 declar_de_subprogs: declar_de_subprogs declar_subprog .

    $default  reduce usando la regla 11 (declar_de_subprogs)


Estado 19

   13 declar_subprog: cabecera_subprog . bloque

    INIBLOQUE  desplazar e ir al estado 5

    bloque  ir al estado 28


Estado 20

   14 cabecera_subprog: tipo_variable . ID PARIZQ parametros PARDER

    ID  desplazar e ir al estado 29


Estado 21

    3 bloque: INIBLOQUE declar_de_variables_locales declar_de_subprogs sentencias . FINBLOQUE
   23 sentencias: sentencias . sentencia

    INIBLOQUE  desplazar e ir al estado 5
    FINBLOQUE  desplazar e ir al estado 30
    ID         desplazar e ir al estado 31
    PARIZQ     desplazar e ir al estado 32
    CIN        desplazar e ir al estado 33
    COUT       desplazar e ir al estado 34
    RETURN     desplazar e ir al estado 35
    ADDSUB     desplazar e ir al estado 36
    EXCL       desplazar e ir al estado 37
    INTHASH    desplazar e ir al estado 38
    CONST      desplazar e ir al estado 39
    DOLLAR     desplazar e ir al estado 40
    IF         desplazar e ir al estado 41
    DO         desplazar e ir al estado 42
    WHILE      desplazar e ir al estado 43
    CORIZQ     desplazar e ir al estado 44

    bloque                ir al estado 45
    sentencia             ir al estado 46
    expresion             ir al estado 47
    op_unario             ir al estado 48
    constante             ir al estado 49
    lista                 ir al estado 50
    llamada_funcion       ir al estado 51
    sentencia_asignacion  ir al estado 52
    sentencia_lista       ir al estado 53
    sentencia_if          ir al estado 54
    sentencia_while       ir al estado 55
    sentencia_entrada     ir al estado 56
    sentencia_salida      ir al estado 57
    sentencia_do_until    ir al estado 58
    sentencia_return      ir al estado 59


Estado 22

   17 tipo_variable_complejo: LISTA TIPOSIMPLE .

    $default  reduce usando la regla 17 (tipo_variable_complejo)


Estado 23

   10 marca_fin_declar_variables: FINBLOQUE .

    $default  reduce usando la regla 10 (marca_fin_declar_variables)


Estado 24

    7 variables_locales: variables_locales cuerpo_declar_variables .

    $default  reduce usando la regla 7 (variables_locales)


Estado 25

    4 declar_de_variables_locales: marca_ini_declar_variables variables_locales marca_fin_declar_variables .

    $default  reduce usando la regla 4 (declar_de_variables_locales)


Estado 26

   18 lista_variables: ID . COMA lista_variables
   19                | ID .

    COMA  desplazar e ir al estado 60

    $default  reduce usando la regla 19 (lista_variables)


Estado 27

    9 cuerpo_declar_variables: tipo_variable lista_variables . PYC

    PYC  desplazar e ir al estado 61


Estado 28

   13 declar_subprog: cabecera_subprog bloque .

    $default  reduce usando la regla 13 (declar_subprog)


Estado 29

   14 cabecera_subprog: tipo_variable ID . PARIZQ parametros PARDER

    PARIZQ  desplazar e ir al estado 62


Estado 30

    3 bloque: INIBLOQUE declar_de_variables_locales declar_de_subprogs sentencias FINBLOQUE .

    $default  reduce usando la regla 3 (bloque)


Estado 31

   38 expresion: ID .
   60 llamada_funcion: ID . PARIZQ lista_expresiones PARDER
   61                | ID . PARIZQ PARDER
   64 sentencia_asignacion: ID . op_asignacion expresion PYC

    PARIZQ  desplazar e ir al estado 63
    ASIGN   desplazar e ir al estado 64

    PARIZQ    [reduce usando la regla 38 (expresion)]
    $default  reduce usando la regla 38 (expresion)

    op_asignacion  ir al estado 65


Estado 32

   41 expresion: PARIZQ . expresion PARDER

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion        ir al estado 67
    op_unario        ir al estado 48
    constante        ir al estado 49
    lista            ir al estado 50
    llamada_funcion  ir al estado 51


Estado 33

   72 sentencia_entrada: CIN . lista_variables PYC

    ID  desplazar e ir al estado 26

    lista_variables  ir al estado 68


Estado 34

   73 sentencia_salida: COUT . lista_expresiones_o_cadena PYC

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    CADENA   desplazar e ir al estado 69
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion                   ir al estado 70
    op_unario                   ir al estado 48
    constante                   ir al estado 49
    lista                       ir al estado 50
    llamada_funcion             ir al estado 51
    lista_expresiones_o_cadena  ir al estado 71
    expresion_cadena            ir al estado 72


Estado 35

   79 sentencia_return: RETURN . expresion PYC

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion        ir al estado 73
    op_unario        ir al estado 48
    constante        ir al estado 49
    lista            ir al estado 50
    llamada_funcion  ir al estado 51


Estado 36

   42 op_unario: ADDSUB .

    $default  reduce usando la regla 42 (op_unario)


Estado 37

   43 op_unario: EXCL .

    $default  reduce usando la regla 43 (op_unario)


Estado 38

   44 op_unario: INTHASH .

    $default  reduce usando la regla 44 (op_unario)


Estado 39

   56 constante: CONST .

    $default  reduce usando la regla 56 (constante)


Estado 40

   67 sentencia_lista: DOLLAR . expresion

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion        ir al estado 74
    op_unario        ir al estado 48
    constante        ir al estado 49
    lista            ir al estado 50
    llamada_funcion  ir al estado 51


Estado 41

   68 sentencia_if: IF . PARIZQ expresion PARDER sentencia bloque_else

    PARIZQ  desplazar e ir al estado 75


Estado 42

   78 sentencia_do_until: DO . sentencia UNTIL PARIZQ expresion PARDER PYC

    INIBLOQUE  desplazar e ir al estado 5
    ID         desplazar e ir al estado 31
    PARIZQ     desplazar e ir al estado 32
    CIN        desplazar e ir al estado 33
    COUT       desplazar e ir al estado 34
    RETURN     desplazar e ir al estado 35
    ADDSUB     desplazar e ir al estado 36
    EXCL       desplazar e ir al estado 37
    INTHASH    desplazar e ir al estado 38
    CONST      desplazar e ir al estado 39
    DOLLAR     desplazar e ir al estado 40
    IF         desplazar e ir al estado 41
    DO         desplazar e ir al estado 42
    WHILE      desplazar e ir al estado 43
    CORIZQ     desplazar e ir al estado 44

    bloque                ir al estado 45
    sentencia             ir al estado 76
    expresion             ir al estado 47
    op_unario             ir al estado 48
    constante             ir al estado 49
    lista                 ir al estado 50
    llamada_funcion       ir al estado 51
    sentencia_asignacion  ir al estado 52
    sentencia_lista       ir al estado 53
    sentencia_if          ir al estado 54
    sentencia_while       ir al estado 55
    sentencia_entrada     ir al estado 56
    sentencia_salida      ir al estado 57
    sentencia_do_until    ir al estado 58
    sentencia_return      ir al estado 59


Estado 43

   71 sentencia_while: WHILE . PARIZQ expresion PARDER sentencia

    PARIZQ  desplazar e ir al estado 77


Estado 44

   58 lista: CORIZQ . lista_expresiones CORDER
   59      | CORIZQ . CORDER

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44
    CORDER   desplazar e ir al estado 78

    expresion          ir al estado 79
    op_unario          ir al estado 48
    constante          ir al estado 49
    lista              ir al estado 50
    llamada_funcion    ir al estado 51
    lista_expresiones  ir al estado 80


Estado 45

   25 sentencia: bloque .

    $default  reduce usando la regla 25 (sentencia)


Estado 46

   23 sentencias: sentencias sentencia .

    $default  reduce usando la regla 23 (sentencias)


Estado 47

   26 sentencia: expresion . PYC
   36 expresion: expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion
   66 sentencia_lista: expresion . SHIFT

    PYC       desplazar e ir al estado 81
    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92
    SHIFT     desplazar e ir al estado 93

    ADDSUB    [reduce usando la regla 55 (op_binario)]
    $default  reduce usando la regla 55 (op_binario)

    op_binario  ir al estado 94


Estado 48

   35 expresion: op_unario . expresion

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion        ir al estado 95
    op_unario        ir al estado 48
    constante        ir al estado 49
    lista            ir al estado 50
    llamada_funcion  ir al estado 51


Estado 49

   39 expresion: constante .

    $default  reduce usando la regla 39 (expresion)


Estado 50

   57 constante: lista .

    $default  reduce usando la regla 57 (constante)


Estado 51

   40 expresion: llamada_funcion .

    $default  reduce usando la regla 40 (expresion)


Estado 52

   27 sentencia: sentencia_asignacion .

    $default  reduce usando la regla 27 (sentencia)


Estado 53

   28 sentencia: sentencia_lista .

    $default  reduce usando la regla 28 (sentencia)


Estado 54

   29 sentencia: sentencia_if .

    $default  reduce usando la regla 29 (sentencia)


Estado 55

   30 sentencia: sentencia_while .

    $default  reduce usando la regla 30 (sentencia)


Estado 56

   31 sentencia: sentencia_entrada .

    $default  reduce usando la regla 31 (sentencia)


Estado 57

   32 sentencia: sentencia_salida .

    $default  reduce usando la regla 32 (sentencia)


Estado 58

   33 sentencia: sentencia_do_until .

    $default  reduce usando la regla 33 (sentencia)


Estado 59

   34 sentencia: sentencia_return .

    $default  reduce usando la regla 34 (sentencia)


Estado 60

   18 lista_variables: ID COMA . lista_variables

    ID  desplazar e ir al estado 26

    lista_variables  ir al estado 96


Estado 61

    9 cuerpo_declar_variables: tipo_variable lista_variables PYC .

    $default  reduce usando la regla 9 (cuerpo_declar_variables)


Estado 62

   14 cabecera_subprog: tipo_variable ID PARIZQ . parametros PARDER

    TIPOSIMPLE  desplazar e ir al estado 12
    LISTA       desplazar e ir al estado 13

    tipo_variable           ir al estado 97
    tipo_variable_complejo  ir al estado 17
    parametros              ir al estado 98
    parametro               ir al estado 99


Estado 63

   60 llamada_funcion: ID PARIZQ . lista_expresiones PARDER
   61                | ID PARIZQ . PARDER

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    PARDER   desplazar e ir al estado 100
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion          ir al estado 79
    op_unario          ir al estado 48
    constante          ir al estado 49
    lista              ir al estado 50
    llamada_funcion    ir al estado 51
    lista_expresiones  ir al estado 101


Estado 64

   65 op_asignacion: ASIGN .

    $default  reduce usando la regla 65 (op_asignacion)


Estado 65

   64 sentencia_asignacion: ID op_asignacion . expresion PYC

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion        ir al estado 102
    op_unario        ir al estado 48
    constante        ir al estado 49
    lista            ir al estado 50
    llamada_funcion  ir al estado 51


Estado 66

   38 expresion: ID .
   60 llamada_funcion: ID . PARIZQ lista_expresiones PARDER
   61                | ID . PARIZQ PARDER

    PARIZQ  desplazar e ir al estado 63

    PARIZQ    [reduce usando la regla 38 (expresion)]
    $default  reduce usando la regla 38 (expresion)


Estado 67

   36 expresion: expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion
   41          | PARIZQ expresion . PARDER

    PARDER    desplazar e ir al estado 103
    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92

    ADDSUB    [reduce usando la regla 55 (op_binario)]
    $default  reduce usando la regla 55 (op_binario)

    op_binario  ir al estado 94


Estado 68

   72 sentencia_entrada: CIN lista_variables . PYC

    PYC  desplazar e ir al estado 104


Estado 69

   77 expresion_cadena: CADENA .

    $default  reduce usando la regla 77 (expresion_cadena)


Estado 70

   36 expresion: expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion
   76 expresion_cadena: expresion .

    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92

    PYC       reduce usando la regla 76 (expresion_cadena)
    ADDSUB    [reduce usando la regla 55 (op_binario)]
    COMA      reduce usando la regla 76 (expresion_cadena)
    $default  reduce usando la regla 55 (op_binario)

    op_binario  ir al estado 94


Estado 71

   73 sentencia_salida: COUT lista_expresiones_o_cadena . PYC

    PYC  desplazar e ir al estado 105


Estado 72

   74 lista_expresiones_o_cadena: expresion_cadena . COMA lista_expresiones_o_cadena
   75                           | expresion_cadena .

    COMA  desplazar e ir al estado 106

    $default  reduce usando la regla 75 (lista_expresiones_o_cadena)


Estado 73

   36 expresion: expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion
   79 sentencia_return: RETURN expresion . PYC

    PYC       desplazar e ir al estado 107
    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92

    ADDSUB    [reduce usando la regla 55 (op_binario)]
    $default  reduce usando la regla 55 (op_binario)

    op_binario  ir al estado 94


Estado 74

   36 expresion: expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion
   67 sentencia_lista: DOLLAR expresion .

    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92

    ID        reduce usando la regla 55 (op_binario)
    ID        [reduce usando la regla 67 (sentencia_lista)]
    PARIZQ    reduce usando la regla 55 (op_binario)
    PARIZQ    [reduce usando la regla 67 (sentencia_lista)]
    ADDSUB    [reduce usando la regla 55 (op_binario)]
    ADDSUB    [reduce usando la regla 67 (sentencia_lista)]
    EXCL      reduce usando la regla 55 (op_binario)
    EXCL      [reduce usando la regla 67 (sentencia_lista)]
    INTHASH   reduce usando la regla 55 (op_binario)
    INTHASH   [reduce usando la regla 67 (sentencia_lista)]
    CONST     reduce usando la regla 55 (op_binario)
    CONST     [reduce usando la regla 67 (sentencia_lista)]
    CORIZQ    reduce usando la regla 55 (op_binario)
    CORIZQ    [reduce usando la regla 67 (sentencia_lista)]
    $default  reduce usando la regla 67 (sentencia_lista)

    op_binario  ir al estado 94


Estado 75

   68 sentencia_if: IF PARIZQ . expresion PARDER sentencia bloque_else

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion        ir al estado 108
    op_unario        ir al estado 48
    constante        ir al estado 49
    lista            ir al estado 50
    llamada_funcion  ir al estado 51


Estado 76

   78 sentencia_do_until: DO sentencia . UNTIL PARIZQ expresion PARDER PYC

    UNTIL  desplazar e ir al estado 109


Estado 77

   71 sentencia_while: WHILE PARIZQ . expresion PARDER sentencia

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion        ir al estado 110
    op_unario        ir al estado 48
    constante        ir al estado 49
    lista            ir al estado 50
    llamada_funcion  ir al estado 51


Estado 78

   59 lista: CORIZQ CORDER .

    $default  reduce usando la regla 59 (lista)


Estado 79

   36 expresion: expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion
   62 lista_expresiones: expresion . COMA lista_expresiones
   63                  | expresion .

    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92
    COMA      desplazar e ir al estado 111

    PARDER    reduce usando la regla 63 (lista_expresiones)
    ADDSUB    [reduce usando la regla 55 (op_binario)]
    CORDER    reduce usando la regla 63 (lista_expresiones)
    $default  reduce usando la regla 55 (op_binario)

    op_binario  ir al estado 94


Estado 80

   58 lista: CORIZQ lista_expresiones . CORDER

    CORDER  desplazar e ir al estado 112


Estado 81

   26 sentencia: expresion PYC .

    $default  reduce usando la regla 26 (sentencia)


Estado 82

   45 op_binario: ORLOG .

    $default  reduce usando la regla 45 (op_binario)


Estado 83

   46 op_binario: ANDLOG .

    $default  reduce usando la regla 46 (op_binario)


Estado 84

   47 op_binario: OR .

    $default  reduce usando la regla 47 (op_binario)


Estado 85

   48 op_binario: XOR .

    $default  reduce usando la regla 48 (op_binario)


Estado 86

   49 op_binario: AND .

    $default  reduce usando la regla 49 (op_binario)


Estado 87

   50 op_binario: EQN .

    $default  reduce usando la regla 50 (op_binario)


Estado 88

   51 op_binario: ADDSUB .

    $default  reduce usando la regla 51 (op_binario)


Estado 89

   52 op_binario: MULDIV .

    $default  reduce usando la regla 52 (op_binario)


Estado 90

   53 op_binario: PORPOR .

    $default  reduce usando la regla 53 (op_binario)


Estado 91

   54 op_binario: BORRLIST .

    $default  reduce usando la regla 54 (op_binario)


Estado 92

   37 expresion: expresion MASMAS . expresion AT expresion

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion        ir al estado 113
    op_unario        ir al estado 48
    constante        ir al estado 49
    lista            ir al estado 50
    llamada_funcion  ir al estado 51


Estado 93

   66 sentencia_lista: expresion SHIFT .

    $default  reduce usando la regla 66 (sentencia_lista)


Estado 94

   36 expresion: expresion op_binario . expresion

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion        ir al estado 114
    op_unario        ir al estado 48
    constante        ir al estado 49
    lista            ir al estado 50
    llamada_funcion  ir al estado 51


Estado 95

   35 expresion: op_unario expresion .
   36          | expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion

    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92

    ID        reduce usando la regla 35 (expresion)
    ID        [reduce usando la regla 55 (op_binario)]
    PARIZQ    reduce usando la regla 35 (expresion)
    PARIZQ    [reduce usando la regla 55 (op_binario)]
    ORLOG     [reduce usando la regla 35 (expresion)]
    ANDLOG    [reduce usando la regla 35 (expresion)]
    OR        [reduce usando la regla 35 (expresion)]
    XOR       [reduce usando la regla 35 (expresion)]
    AND       [reduce usando la regla 35 (expresion)]
    EQN       [reduce usando la regla 35 (expresion)]
    ADDSUB    [reduce usando la regla 35 (expresion)]
    ADDSUB    [reduce usando la regla 55 (op_binario)]
    MULDIV    [reduce usando la regla 35 (expresion)]
    EXCL      reduce usando la regla 35 (expresion)
    EXCL      [reduce usando la regla 55 (op_binario)]
    PORPOR    [reduce usando la regla 35 (expresion)]
    BORRLIST  [reduce usando la regla 35 (expresion)]
    INTHASH   reduce usando la regla 35 (expresion)
    INTHASH   [reduce usando la regla 55 (op_binario)]
    MASMAS    [reduce usando la regla 35 (expresion)]
    CONST     reduce usando la regla 35 (expresion)
    CONST     [reduce usando la regla 55 (op_binario)]
    CORIZQ    reduce usando la regla 35 (expresion)
    CORIZQ    [reduce usando la regla 55 (op_binario)]
    $default  reduce usando la regla 35 (expresion)

    op_binario  ir al estado 94


Estado 96

   18 lista_variables: ID COMA lista_variables .

    $default  reduce usando la regla 18 (lista_variables)


Estado 97

   22 parametro: tipo_variable . ID

    ID  desplazar e ir al estado 115


Estado 98

   14 cabecera_subprog: tipo_variable ID PARIZQ parametros . PARDER

    PARDER  desplazar e ir al estado 116


Estado 99

   20 parametros: parametro . COMA parametros
   21           | parametro .

    COMA  desplazar e ir al estado 117

    $default  reduce usando la regla 21 (parametros)


Estado 100

   61 llamada_funcion: ID PARIZQ PARDER .

    $default  reduce usando la regla 61 (llamada_funcion)


Estado 101

   60 llamada_funcion: ID PARIZQ lista_expresiones . PARDER

    PARDER  desplazar e ir al estado 118


Estado 102

   36 expresion: expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion
   64 sentencia_asignacion: ID op_asignacion expresion . PYC

    PYC       desplazar e ir al estado 119
    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92

    ADDSUB    [reduce usando la regla 55 (op_binario)]
    $default  reduce usando la regla 55 (op_binario)

    op_binario  ir al estado 94


Estado 103

   41 expresion: PARIZQ expresion PARDER .

    $default  reduce usando la regla 41 (expresion)


Estado 104

   72 sentencia_entrada: CIN lista_variables PYC .

    $default  reduce usando la regla 72 (sentencia_entrada)


Estado 105

   73 sentencia_salida: COUT lista_expresiones_o_cadena PYC .

    $default  reduce usando la regla 73 (sentencia_salida)


Estado 106

   74 lista_expresiones_o_cadena: expresion_cadena COMA . lista_expresiones_o_cadena

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    CADENA   desplazar e ir al estado 69
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion                   ir al estado 70
    op_unario                   ir al estado 48
    constante                   ir al estado 49
    lista                       ir al estado 50
    llamada_funcion             ir al estado 51
    lista_expresiones_o_cadena  ir al estado 120
    expresion_cadena            ir al estado 72


Estado 107

   79 sentencia_return: RETURN expresion PYC .

    $default  reduce usando la regla 79 (sentencia_return)


Estado 108

   36 expresion: expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion
   68 sentencia_if: IF PARIZQ expresion . PARDER sentencia bloque_else

    PARDER    desplazar e ir al estado 121
    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92

    ADDSUB    [reduce usando la regla 55 (op_binario)]
    $default  reduce usando la regla 55 (op_binario)

    op_binario  ir al estado 94


Estado 109

   78 sentencia_do_until: DO sentencia UNTIL . PARIZQ expresion PARDER PYC

    PARIZQ  desplazar e ir al estado 122


Estado 110

   36 expresion: expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion
   71 sentencia_while: WHILE PARIZQ expresion . PARDER sentencia

    PARDER    desplazar e ir al estado 123
    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92

    ADDSUB    [reduce usando la regla 55 (op_binario)]
    $default  reduce usando la regla 55 (op_binario)

    op_binario  ir al estado 94


Estado 111

   62 lista_expresiones: expresion COMA . lista_expresiones

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion          ir al estado 79
    op_unario          ir al estado 48
    constante          ir al estado 49
    lista              ir al estado 50
    llamada_funcion    ir al estado 51
    lista_expresiones  ir al estado 124


Estado 112

   58 lista: CORIZQ lista_expresiones CORDER .

    $default  reduce usando la regla 58 (lista)


Estado 113

   36 expresion: expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion
   37          | expresion MASMAS expresion . AT expresion

    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    AT        desplazar e ir al estado 125
    MASMAS    desplazar e ir al estado 92

    ADDSUB    [reduce usando la regla 55 (op_binario)]
    $default  reduce usando la regla 55 (op_binario)

    op_binario  ir al estado 94


Estado 114

   36 expresion: expresion . op_binario expresion
   36          | expresion op_binario expresion .
   37          | expresion . MASMAS expresion AT expresion

    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92

    ID        reduce usando la regla 36 (expresion)
    ID        [reduce usando la regla 55 (op_binario)]
    PARIZQ    reduce usando la regla 36 (expresion)
    PARIZQ    [reduce usando la regla 55 (op_binario)]
    ORLOG     [reduce usando la regla 36 (expresion)]
    ANDLOG    [reduce usando la regla 36 (expresion)]
    OR        [reduce usando la regla 36 (expresion)]
    XOR       [reduce usando la regla 36 (expresion)]
    AND       [reduce usando la regla 36 (expresion)]
    EQN       [reduce usando la regla 36 (expresion)]
    ADDSUB    [reduce usando la regla 36 (expresion)]
    ADDSUB    [reduce usando la regla 55 (op_binario)]
    MULDIV    [reduce usando la regla 36 (expresion)]
    EXCL      reduce usando la regla 36 (expresion)
    EXCL      [reduce usando la regla 55 (op_binario)]
    PORPOR    [reduce usando la regla 36 (expresion)]
    BORRLIST  [reduce usando la regla 36 (expresion)]
    INTHASH   reduce usando la regla 36 (expresion)
    INTHASH   [reduce usando la regla 55 (op_binario)]
    MASMAS    [reduce usando la regla 36 (expresion)]
    CONST     reduce usando la regla 36 (expresion)
    CONST     [reduce usando la regla 55 (op_binario)]
    CORIZQ    reduce usando la regla 36 (expresion)
    CORIZQ    [reduce usando la regla 55 (op_binario)]
    $default  reduce usando la regla 36 (expresion)

    op_binario  ir al estado 94


Estado 115

   22 parametro: tipo_variable ID .

    $default  reduce usando la regla 22 (parametro)


Estado 116

   14 cabecera_subprog: tipo_variable ID PARIZQ parametros PARDER .

    $default  reduce usando la regla 14 (cabecera_subprog)


Estado 117

   20 parametros: parametro COMA . parametros

    TIPOSIMPLE  desplazar e ir al estado 12
    LISTA       desplazar e ir al estado 13

    tipo_variable           ir al estado 97
    tipo_variable_complejo  ir al estado 17
    parametros              ir al estado 126
    parametro               ir al estado 99


Estado 118

   60 llamada_funcion: ID PARIZQ lista_expresiones PARDER .

    $default  reduce usando la regla 60 (llamada_funcion)


Estado 119

   64 sentencia_asignacion: ID op_asignacion expresion PYC .

    $default  reduce usando la regla 64 (sentencia_asignacion)


Estado 120

   74 lista_expresiones_o_cadena: expresion_cadena COMA lista_expresiones_o_cadena .

    $default  reduce usando la regla 74 (lista_expresiones_o_cadena)


Estado 121

   68 sentencia_if: IF PARIZQ expresion PARDER . sentencia bloque_else

    INIBLOQUE  desplazar e ir al estado 5
    ID         desplazar e ir al estado 31
    PARIZQ     desplazar e ir al estado 32
    CIN        desplazar e ir al estado 33
    COUT       desplazar e ir al estado 34
    RETURN     desplazar e ir al estado 35
    ADDSUB     desplazar e ir al estado 36
    EXCL       desplazar e ir al estado 37
    INTHASH    desplazar e ir al estado 38
    CONST      desplazar e ir al estado 39
    DOLLAR     desplazar e ir al estado 40
    IF         desplazar e ir al estado 41
    DO         desplazar e ir al estado 42
    WHILE      desplazar e ir al estado 43
    CORIZQ     desplazar e ir al estado 44

    bloque                ir al estado 45
    sentencia             ir al estado 127
    expresion             ir al estado 47
    op_unario             ir al estado 48
    constante             ir al estado 49
    lista                 ir al estado 50
    llamada_funcion       ir al estado 51
    sentencia_asignacion  ir al estado 52
    sentencia_lista       ir al estado 53
    sentencia_if          ir al estado 54
    sentencia_while       ir al estado 55
    sentencia_entrada     ir al estado 56
    sentencia_salida      ir al estado 57
    sentencia_do_until    ir al estado 58
    sentencia_return      ir al estado 59


Estado 122

   78 sentencia_do_until: DO sentencia UNTIL PARIZQ . expresion PARDER PYC

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion        ir al estado 128
    op_unario        ir al estado 48
    constante        ir al estado 49
    lista            ir al estado 50
    llamada_funcion  ir al estado 51


Estado 123

   71 sentencia_while: WHILE PARIZQ expresion PARDER . sentencia

    INIBLOQUE  desplazar e ir al estado 5
    ID         desplazar e ir al estado 31
    PARIZQ     desplazar e ir al estado 32
    CIN        desplazar e ir al estado 33
    COUT       desplazar e ir al estado 34
    RETURN     desplazar e ir al estado 35
    ADDSUB     desplazar e ir al estado 36
    EXCL       desplazar e ir al estado 37
    INTHASH    desplazar e ir al estado 38
    CONST      desplazar e ir al estado 39
    DOLLAR     desplazar e ir al estado 40
    IF         desplazar e ir al estado 41
    DO         desplazar e ir al estado 42
    WHILE      desplazar e ir al estado 43
    CORIZQ     desplazar e ir al estado 44

    bloque                ir al estado 45
    sentencia             ir al estado 129
    expresion             ir al estado 47
    op_unario             ir al estado 48
    constante             ir al estado 49
    lista                 ir al estado 50
    llamada_funcion       ir al estado 51
    sentencia_asignacion  ir al estado 52
    sentencia_lista       ir al estado 53
    sentencia_if          ir al estado 54
    sentencia_while       ir al estado 55
    sentencia_entrada     ir al estado 56
    sentencia_salida      ir al estado 57
    sentencia_do_until    ir al estado 58
    sentencia_return      ir al estado 59


Estado 124

   62 lista_expresiones: expresion COMA lista_expresiones .

    $default  reduce usando la regla 62 (lista_expresiones)


Estado 125

   37 expresion: expresion MASMAS expresion AT . expresion

    ID       desplazar e ir al estado 66
    PARIZQ   desplazar e ir al estado 32
    ADDSUB   desplazar e ir al estado 36
    EXCL     desplazar e ir al estado 37
    INTHASH  desplazar e ir al estado 38
    CONST    desplazar e ir al estado 39
    CORIZQ   desplazar e ir al estado 44

    expresion        ir al estado 130
    op_unario        ir al estado 48
    constante        ir al estado 49
    lista            ir al estado 50
    llamada_funcion  ir al estado 51


Estado 126

   20 parametros: parametro COMA parametros .

    $default  reduce usando la regla 20 (parametros)


Estado 127

   68 sentencia_if: IF PARIZQ expresion PARDER sentencia . bloque_else

    ELSE  desplazar e ir al estado 131

    ELSE      [reduce usando la regla 70 (bloque_else)]
    $default  reduce usando la regla 70 (bloque_else)

    bloque_else  ir al estado 132


Estado 128

   36 expresion: expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion
   78 sentencia_do_until: DO sentencia UNTIL PARIZQ expresion . PARDER PYC

    PARDER    desplazar e ir al estado 133
    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92

    ADDSUB    [reduce usando la regla 55 (op_binario)]
    $default  reduce usando la regla 55 (op_binario)

    op_binario  ir al estado 94


Estado 129

   71 sentencia_while: WHILE PARIZQ expresion PARDER sentencia .

    $default  reduce usando la regla 71 (sentencia_while)


Estado 130

   36 expresion: expresion . op_binario expresion
   37          | expresion . MASMAS expresion AT expresion
   37          | expresion MASMAS expresion AT expresion .

    ORLOG     desplazar e ir al estado 82
    ANDLOG    desplazar e ir al estado 83
    OR        desplazar e ir al estado 84
    XOR       desplazar e ir al estado 85
    AND       desplazar e ir al estado 86
    EQN       desplazar e ir al estado 87
    ADDSUB    desplazar e ir al estado 88
    MULDIV    desplazar e ir al estado 89
    PORPOR    desplazar e ir al estado 90
    BORRLIST  desplazar e ir al estado 91
    MASMAS    desplazar e ir al estado 92

    ID        reduce usando la regla 37 (expresion)
    ID        [reduce usando la regla 55 (op_binario)]
    PARIZQ    reduce usando la regla 37 (expresion)
    PARIZQ    [reduce usando la regla 55 (op_binario)]
    ORLOG     [reduce usando la regla 37 (expresion)]
    ANDLOG    [reduce usando la regla 37 (expresion)]
    OR        [reduce usando la regla 37 (expresion)]
    XOR       [reduce usando la regla 37 (expresion)]
    AND       [reduce usando la regla 37 (expresion)]
    EQN       [reduce usando la regla 37 (expresion)]
    ADDSUB    [reduce usando la regla 37 (expresion)]
    ADDSUB    [reduce usando la regla 55 (op_binario)]
    MULDIV    [reduce usando la regla 37 (expresion)]
    EXCL      reduce usando la regla 37 (expresion)
    EXCL      [reduce usando la regla 55 (op_binario)]
    PORPOR    [reduce usando la regla 37 (expresion)]
    BORRLIST  [reduce usando la regla 37 (expresion)]
    INTHASH   reduce usando la regla 37 (expresion)
    INTHASH   [reduce usando la regla 55 (op_binario)]
    MASMAS    [reduce usando la regla 37 (expresion)]
    CONST     reduce usando la regla 37 (expresion)
    CONST     [reduce usando la regla 55 (op_binario)]
    CORIZQ    reduce usando la regla 37 (expresion)
    CORIZQ    [reduce usando la regla 55 (op_binario)]
    $default  reduce usando la regla 37 (expresion)

    op_binario  ir al estado 94


Estado 131

   69 bloque_else: ELSE . sentencia

    INIBLOQUE  desplazar e ir al estado 5
    ID         desplazar e ir al estado 31
    PARIZQ     desplazar e ir al estado 32
    CIN        desplazar e ir al estado 33
    COUT       desplazar e ir al estado 34
    RETURN     desplazar e ir al estado 35
    ADDSUB     desplazar e ir al estado 36
    EXCL       desplazar e ir al estado 37
    INTHASH    desplazar e ir al estado 38
    CONST      desplazar e ir al estado 39
    DOLLAR     desplazar e ir al estado 40
    IF         desplazar e ir al estado 41
    DO         desplazar e ir al estado 42
    WHILE      desplazar e ir al estado 43
    CORIZQ     desplazar e ir al estado 44

    bloque                ir al estado 45
    sentencia             ir al estado 134
    expresion             ir al estado 47
    op_unario             ir al estado 48
    constante             ir al estado 49
    lista                 ir al estado 50
    llamada_funcion       ir al estado 51
    sentencia_asignacion  ir al estado 52
    sentencia_lista       ir al estado 53
    sentencia_if          ir al estado 54
    sentencia_while       ir al estado 55
    sentencia_entrada     ir al estado 56
    sentencia_salida      ir al estado 57
    sentencia_do_until    ir al estado 58
    sentencia_return      ir al estado 59


Estado 132

   68 sentencia_if: IF PARIZQ expresion PARDER sentencia bloque_else .

    $default  reduce usando la regla 68 (sentencia_if)


Estado 133

   78 sentencia_do_until: DO sentencia UNTIL PARIZQ expresion PARDER . PYC

    PYC  desplazar e ir al estado 135


Estado 134

   69 bloque_else: ELSE sentencia .

    $default  reduce usando la regla 69 (bloque_else)


Estado 135

   78 sentencia_do_until: DO sentencia UNTIL PARIZQ expresion PARDER PYC .

    $default  reduce usando la regla 78 (sentencia_do_until)
